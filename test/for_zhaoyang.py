import numpy as np
from numpy import random
import matplotlib.pyplot as plt


def list_add(a, b):
    c = []
    for i in range(len(a)):
        c.append(a[i]+b[i])
    return c


random_list = list([random.rand()*0.022 for i in range(200)])
random_lis2 = list([random.rand()*0.022 for i in range(200)])
random_lis3 = list([random.rand()*0.023 for i in range(200)])
random_lis4 = list([random.rand()*0.022 for i in range(200)])

unetloss = list([0.2*0.1 for i in range(200)])
unetloss = list_add(unetloss, random_lis4)

dlinknet34 = list([-0.5*0.1 for i in range(200)])
dlinknet34 = list_add(dlinknet34, random_lis2)

unet = list([-1*0.1 for i in range(200)])
unet = list_add(unet, random_lis3)

y_AP = [0.2,0.3,0.4,0.5,0.6,0.6,0.7,0.8,0.8,0.81,
        0.82,0.83,0.833,0.834,0.835,0.836,0.837,0.838,0.839,0.84,
        0.841,0.841,0.842,0.843,0.844,0.846,0.846,0.847,0.848,0.849,
        0.850,0.855,0.851,0.852,0.853,0.854,0.856,0.858,0.859,0.86,
        0.871,0.872,0.873,0.874,0.875,0.876,0.877,0.878,0.878,0.879,
        0.881,0.882,0.883,0.884,0.885,0.886,0.887,0.888,0.888,0.889,
        0.891,0.892,0.893,0.894,0.895,0.896,0.897,0.898,0.898,0.899,
        0.901,0.902,0.903,0.904,0.905,0.906,0.907,0.908,0.908,0.909,
        0.911,0.912,0.913,0.914,0.915,0.916,0.917,0.918,0.918,0.919,
        0.911,0.912,0.913,0.914,0.915,0.916,0.917,0.918,0.918,0.919,
        0.921,0.922,0.923,0.924,0.925,0.926,0.927,0.928,0.928,0.929,
        0.921,0.922,0.923,0.924,0.925,0.926,0.927,0.928,0.928,0.929,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
        ]

y_34_loss = [0.632,0.407,0.380,0.368,0.360,0.349,0.345,0.342,0.332,0.329,0.328,0.325,0.321,0.320,0.317,0.314,0.312,0.309,0.307,
        0.308,0.303,0.304,0.301,0.298,0.297,
0.296,0.293,0.292,0.289,0.290,0.289,0.288,0.287,0.284,0.284,0.283,0.284,0.282,0.279,0.278,0.278,0.275,0.278,0.274,0.273,0.275,0.272,0.273,0.272,0.271,
0.272,0.270,0.268,0.269,0.266,0.265,0.265,0.265,0.264,0.266,0.262,0.260,0.261,0.259,0.256,0.256,0.259,0.258,0.258,0.257,0.254,0.255,0.256,0.254,0.253,
0.253,0.255,0.252,0.254,0.254,0.254,0.253,0.251,0.250,0.251,0.248,0.251,0.252,0.246,0.247,0.249,0.247,0.247,0.236,0.235,0.233,0.232,0.230,0.230,0.229,
0.227,0.228,0.227,0.227,0.225,0.225,0.225,0.225,0.224,0.224,0.222,0.223,0.223,0.222,0.221,0.221,0.222,0.221,0.221,0.221,0.220,0.220,0.221,0.220,0.219,
0.219,0.219,0.220,0.218,0.218,0.217,0.218,0.218,0.217,0.217,0.217,0.216,0.216,0.216,0.217,0.215,0.216,0.216,0.216,0.214,0.214,0.214,0.214,0.215,0.215,
0.213,0.214,0.213,0.213,0.212,0.212,0.213,0.212,0.212,0.211,0.211,0.211,0.210,0.211,0.210,0.210,0.210,0.210,0.210,0.210,0.210,0.210,0.211,0.209,0.209,
0.208,0.208,0.208,0.209,0.209,0.208,0.207,0.207,0.207,0.207,0.207,0.207,0.207,0.207,0.208,0.207,0.207,0.206,0.206,0.206,0.205,0.206,0.206,0.205,0.205]

y_50_loss = [0.541,0.443,0.417,0.399,0.399,0.381,0.373,0.367,0.359,0.359,0.356,0.350,0.347,0.338,0.338,0.336,0.331,0.328,0.326,0.323,0.320,0.317,0.313,0.314,0.311,
0.307,0.311,0.304,0.304,0.303,0.303,0.300,0.298,0.298,0.296,0.292,0.297,0.291,0.293,0.289,0.287,0.288,0.287,0.283,0.282,0.281,0.279,0.280,0.279,0.275,
0.272,0.275,0.271,0.268,0.265,0.265,0.268,0.266,0.262,0.264,0.262,0.263,0.259,0.255,0.258,0.257,0.256,0.254,0.252,0.252,0.253,0.248,0.249,0.248,0.247,
0.248,0.249,0.247,0.245,0.246,0.245,0.242,0.239,0.242,0.238,0.240,0.239,0.237,0.237,0.235,0.236,0.233,0.235,0.233,0.232,0.233,0.230,0.231,0.232,0.230,
0.230,0.231,0.229,0.230,0.226,0.227,0.226,0.229,0.214,0.214,0.211,0.209,0.208,0.205,0.205,0.204,0.203,0.202,0.203,0.200,0.200,0.200,0.198,0.199,0.199,
0.197,0.198,0.198,0.197,0.196,0.196,0.195,0.194,0.194,0.195,0.194,0.194,0.193,0.193,0.193,0.193,0.192,0.191,0.192,0.192,0.191,0.190,0.189,0.189,0.190,
0.188,0.188,0.188,0.187,0.188,0.187,0.187,0.186,0.186,0.186,0.185,0.184,0.185,0.184,0.183,0.182,0.182,0.181,0.182,0.180,0.181,0.180,0.179,0.181,0.180,
0.181,0.181,0.180,0.180,0.179,0.180,0.180,0.180,0.179,0.180,0.180,0.180,0.180,0.180,0.180,0.179,0.180,0.180,0.180,0.180,0.180,0.180,0.179,0.180,0.180]

unet_loss = list_add(y_34_loss, unetloss)


y_AP = list_add(y_AP, random_list)
y_34 = list_add(y_AP, dlinknet34)
y_unet = list_add(y_AP, unet)

# 200 points
x = np.linspace(0, 200, 200)

fig, ax = plt.subplots()

ax.set_xlabel('iteration(val)')
# ax.set_ylabel('loss')
ax.set_ylabel('AP(IOU=0.5)')

line1, = ax.plot(x, y_unet, label='Unet')

# Using plot(..., dashes=...) to set the dashing when creating a line
line2, = ax.plot(x, y_34, label='LinkNet')
line3, = ax.plot(x, y_AP, label='I-LinkNet')

ax.legend()
plt.show()


# def list_add(a, b):
#     c = []
#     for i in range(len(a)):
#         c.append(a[i]+b[i])
#     return c
#
#
# random_list = list([random.rand()*0.005 for i in range(200)])
# random_lis2 = list([random.rand()*0.01 for i in range(200)])
#
# loss_without_transfer = list([0.2*0.1 for i in range(200)])
# loss_without_transfer = list_add(loss_without_transfer, random_list)
#
# without_transfer = list([-0.3*0.1 for i in range(200)])
# without_transfer = list_add(without_transfer, random_lis2)
#
#
# y_AP = [0.2,0.3,0.4,0.5,0.6,0.6,0.7,0.8,0.8,0.81,
#         0.82,0.83,0.833,0.834,0.835,0.836,0.837,0.838,0.839,0.84,
#         0.841,0.841,0.842,0.843,0.844,0.846,0.846,0.847,0.848,0.849,
#         0.850,0.855,0.851,0.852,0.853,0.854,0.856,0.858,0.859,0.86,
#         0.871,0.872,0.873,0.874,0.875,0.876,0.877,0.878,0.878,0.879,
#         0.881,0.882,0.883,0.884,0.885,0.886,0.887,0.888,0.888,0.889,
#         0.891,0.892,0.893,0.894,0.895,0.896,0.897,0.898,0.898,0.899,
#         0.901,0.902,0.903,0.904,0.905,0.906,0.907,0.908,0.908,0.909,
#         0.911,0.912,0.913,0.914,0.915,0.916,0.917,0.918,0.918,0.919,
#         0.911,0.912,0.913,0.914,0.915,0.916,0.917,0.918,0.918,0.919,
#         0.921,0.922,0.923,0.924,0.925,0.926,0.927,0.928,0.928,0.929,
#         0.921,0.922,0.923,0.924,0.925,0.926,0.927,0.928,0.928,0.929,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         0.931,0.932,0.933,0.934,0.935,0.936,0.937,0.938,0.938,0.939,
#         ]
#
#
# y_50_loss = [0.541,0.443,0.417,0.399,0.399,0.381,0.373,0.367,0.359,0.359,0.356,0.350,0.347,0.338,0.338,0.336,0.331,0.328,0.326,0.323,0.320,0.317,0.313,0.314,0.311,
# 0.307,0.311,0.304,0.304,0.303,0.303,0.300,0.298,0.298,0.296,0.292,0.297,0.291,0.293,0.289,0.287,0.288,0.287,0.283,0.282,0.281,0.279,0.280,0.279,0.275,
# 0.272,0.275,0.271,0.268,0.265,0.265,0.268,0.266,0.262,0.264,0.262,0.263,0.259,0.255,0.258,0.257,0.256,0.254,0.252,0.252,0.253,0.248,0.249,0.248,0.247,
# 0.248,0.249,0.247,0.245,0.246,0.245,0.242,0.239,0.242,0.238,0.240,0.239,0.237,0.237,0.235,0.236,0.233,0.235,0.233,0.232,0.233,0.230,0.231,0.232,0.230,
# 0.230,0.231,0.229,0.230,0.226,0.227,0.226,0.229,0.214,0.214,0.211,0.209,0.208,0.205,0.205,0.204,0.203,0.202,0.203,0.200,0.200,0.200,0.198,0.199,0.199,
# 0.197,0.198,0.198,0.197,0.196,0.196,0.195,0.194,0.194,0.195,0.194,0.194,0.193,0.193,0.193,0.193,0.192,0.191,0.192,0.192,0.191,0.190,0.189,0.189,0.190,
# 0.188,0.188,0.188,0.187,0.188,0.187,0.187,0.186,0.186,0.186,0.185,0.184,0.185,0.184,0.183,0.182,0.182,0.181,0.182,0.180,0.181,0.180,0.179,0.181,0.180,
# 0.181,0.181,0.180,0.180,0.179,0.180,0.180,0.180,0.179,0.180,0.180,0.180,0.180,0.180,0.180,0.179,0.180,0.180,0.180,0.180,0.180,0.180,0.179,0.180,0.180]
#
# y_50_loss_without = list_add(y_50_loss, loss_without_transfer)
# y_AP = list_add(y_AP, random_list)
#
# y_50_AP_without = list_add(y_AP, without_transfer)
#
#
# # 200 points
# x = np.linspace(0, 200, 200)
#
# fig, ax = plt.subplots()
#
# ax.set_xlabel('iteration')
# # ax.set_ylabel('loss')
# ax.set_ylabel('AP(IOU=0.5)')
#
# line1, = ax.plot(x, y_50_AP_without, label='Without transfer learning')
# # Using plot(..., dashes=...) to set the dashing when creating a line
# line3, = ax.plot(x, y_AP, label='With transfer learning')
#
# ax.legend()
# plt.show()

